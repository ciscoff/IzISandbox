<?xml version="1.0" encoding="utf-8"?>
<resources>

    <!--
     Список настраиваемых стилей можно посмотреть здесь
     https://stackoverflow.com/questions/55357407/how-to-change-material-textinputlayout-outlinedbox-unfocused-color
    -->

    <style name="PhoneTextInput" parent="Widget.MaterialComponents.TextInputLayout.OutlinedBox">
        <!-- Цвет рамки когда элемент в ФОКУСЕ-->
        <item name="colorPrimary">@color/colorCyan</item>
        <!-- Цвет мигающего курсора и "капли" под ним -->
        <item name="colorControlActivated">@color/colorAccentUi</item>
    </style>


    <style name="CustomTextInputOverlay" parent="ThemeOverlay.MaterialComponents.TextInputEditText">
        <!-- Цвет рамки и подсказки когда элемент в ФОКУСЕ-->
        <item name="colorPrimary">@android:color/holo_green_dark</item>
        <!-- Цвет рамки и подсказки в ней когда элемент НЕ В ФОКУСЕ -->
        <item name="colorOnSurface">@android:color/holo_blue_dark</item>
        <!-- Цвет мигающего курсора и "капли" под ним -->
        <item name="colorControlActivated">@color/colorAccentPress</item>

        <!--
        Радиусы закругления контуров элемента:
         - углов рамки у элементов OutlinedBox
         - углов фона у элементов FilledBox
         - углов рамки у элементов ExposedDropdownMenu
        -->
        <item name="boxCornerRadiusTopEnd">@dimen/radius_2</item>
        <item name="boxCornerRadiusBottomStart">@dimen/radius_2</item>

        <!--        ??? Не работает-->
        <item name="boxBackgroundColor">#FFEB3B</item>
        <!--        ??? Не работает-->
        <item name="boxStrokeColor">@color/colorAccent</item>
    </style>

    <!-- EditText underline and cursor colors -->
    <style name="LoginEditTextTheme" parent="AppTheme">
        <item name="colorAccent">@color/colorAccentUi</item>
    </style>

    <style name="CreateUserTextInputTheme" parent="Widget.MaterialComponents.TextInputLayout.OutlinedBox">
        <item name="colorPrimary">@color/colorAccentUi</item>
        <item name="colorControlNormal">@android:color/darker_gray</item>
        <item name="colorControlActivated">@color/colorAccentUi</item>
    </style>

    <!-- Эксперименты -->

    <!--
    Это стиль для EditText'а, который не кликабельный, без фокуса, без курсора (он прозрачный) и
    вообще без всякого ввода inputType=none.
    -->
    <style name="DumbEditText">
        <item name="android:clickable">false</item>
        <item name="android:focusable">false</item>
        <item name="android:focusableInTouchMode">false</item>
        <item name="android:inputType">none</item>
        <item name="android:textCursorDrawable">@android:color/transparent</item>
    </style>

    <!--
    Этот стиль меняет высоту всего элемента TextInputLayout благодаря изменениям
    вертикальных padding'ов у дочернего TextInputEditText
    -->
    <style name="LowEditText">
        <item name="android:paddingTop">6dp</item>
        <item name="android:paddingBottom">6dp</item>
    </style>

    <!--    Эксперименты -->
    <style name="CustomErrorText" parent="TextAppearance.AppCompat">
        <item name="android:textColor">@color/red</item>
        <item name="android:textSize">16sp</item>
    </style>

    <style name="CustomHintText" parent="TextAppearance.AppCompat">
        <item name="android:textColor">@color/white</item>
        <item name="android:textSize">14sp</item>
    </style>

    <style name="TextInputLayoutAppearance" parent="Widget.MaterialComponents.TextInputLayout.OutlinedBox">
        <!-- reference our hint & error styles -->
        <item name="hintTextAppearance">@style/CustomHintText</item>
        <item name="errorTextAppearance">@style/CustomErrorText</item>
        <item name="android:textColor">@color/user_input_color</item>
        <item name="android:textColorHint">@color/unfocused_color</item>
        <item name="colorControlNormal">@color/white</item>
        <item name="colorControlActivated">@color/blue</item>
        <item name="colorControlHighlight">@color/green</item>
    </style>

    <!-- //////////////////////////////////////////////////////////////////////////// -->

    <!--
    Функционал элементов TextInputLayout:
    1. Текста нет, не в фокусе: рамка серая, подсказка серая.
    2. Попали в фокус: подсказка и рамка синие.
    3. Потеряли фокус, но текст напечатали: рамка и подсказка пурпурные.
    4. Стерли текст, потеряли фокус: рамка серая, подсказка серая.
    -->

    <!--
    Вообще странно, что используются селекторы, ведь оба атрибута срабатывают в разных
    состояниях: один в фокусе, другой не в фокусе, а мы передаем селекторы, где тоже разные
    цвета для разных состояний. Ну да ладно. Тут можно конечно и просто цвета подставить,
    но если делать через код, то там только CSL.
    -->
    <style name="Widget.Hint" parent="Widget.MaterialComponents.TextInputLayout.OutlinedBox">
        <!-- Цвет подсказки, когда "НЕ В ФОКУСЕ". Селектор. -->
        <item name="android:textColorHint">@color/selector_box_without_text</item>
        <!-- Цвет подсказки, когда "В ФОКУСЕ". Селектор. -->
        <item name="hintTextColor">@color/selector_box_without_text</item>
        <!-- Цвет рамки в состоянии "В ФОКУСЕ" -->
        <item name="boxStrokeWidthFocused">1dp</item>
    </style>

    <!-- Переопределяем цвет мигающего курсора. ThemeOverlay !!! -->
    <style name="ThemeOverlay.TextInput.Cursor" parent="ThemeOverlay.MaterialComponents">
        <item name="colorPrimary">@color/blue</item>
    </style>

    <!-- Цвет текста в TextEditText -->
    <style name="Widget.EditText.Text" parent="Widget.MaterialComponents.TextView">
        <item name="android:textColor">@color/purple</item>
        <item name="android:textSize">18sp</item>
    </style>

    <!-- Цвет текста в TextEditText -->
    <style name="Widget.EditText.Dumb" parent="Widget.MaterialComponents.TextView">
        <item name="android:clickable">false</item>
        <item name="android:focusable">false</item>
        <item name="android:focusableInTouchMode">false</item>
        <item name="android:inputType">none</item>
        <item name="android:textColor">@color/purple</item>
        <item name="android:textSize">14sp</item>
        <item name="android:textCursorDrawable">@android:color/transparent</item>
    </style>

    <!-- //////////////////////////////////////////////////////////////////////////// -->

    <!-- Ниже всякое экспериментальное г... -->

    <!--
    Вот тут кое что
    https://medium.com/fw-engineering/textinputlayout-proper-theming-dde422e86c43
    https://medium.com/@muhammadahmedabutalib/for-com-google-android-material-textfield-textinputlayout-c43642b14df1
    https://medium.com/@suragch/theme-appcompat-vs-themeoverlay-appcompat-in-android-c4abdc4d9683
    -->

    <!-- Это нужно применить к TextInputLayout как стиль, а не как тему -->
    <style name="CustomizeHintAndBox" parent="Widget.MaterialComponents.TextInputLayout.OutlinedBox">
        <!-- Цвет фона внутри рамки TextInputLayout (в фокусе и без) -->
        <item name="boxBackgroundColor">#FFEB3B</item>
        <!-- Цвет рамки КОГДА элемент В ФОКУСЕ-->
        <item name="boxStrokeColor">@color/blue</item>

        <item name="android:textColor">@color/user_input_color</item>
        <item name="android:textColorHint">@color/unfocused_color</item>

    </style>

    <style name="MyHintStyle" parent="TextAppearance.AppCompat.Small">
        <item name="android:textColor">@color/red</item>
    </style>


    <style name="CustomizeHintAndBoxTheme" parent="AppTheme">

        <!-- Цвет мигающего курсора и underline в режиме "В фокусе". colorControlActivated -->
        <item name="colorAccent">@color/blue</item>

        <!-- Цвет underline в режиме "Не в фокусе". colorControlNormal-->
        <item name="android:textColorSecondary">@color/red</item>

        <!-- Текст печатаемого текста и линии baseline под ним -->
        <item name="android:textColorPrimary">@color/user_input_color</item>

        <!-- Цвет подсказки ПУСТОГО поля в режиме "Не в фокусе" -->
        <item name="android:textColorHint">@color/unfocused_color</item>
    </style>

    <!--    Это расширение существующего стиля, не ThemeOverlay !!! -->
    <style name="Custom.TextInput.Box.And.Label.Style" parent="Widget.MaterialComponents.TextInputLayout.OutlinedBox">
        <!-- Цвет подсказки, когда "НЕ В ФОКУСЕ". Явное значение, но можно и селектор. -->
        <item name="android:textColorHint">@color/blue</item>
        <!-- Цвет подсказки, когда "В ФОКУСЕ". Явное значение, но можно и селектор. -->
        <item name="hintTextColor">@color/red</item>
        <!-- Селектор для смены цвета рамки "В ФОКУСЕ"/"НЕ В ФОКУСЕ"  -->
        <item name="boxStrokeColor">@color/selector_box_without_text</item>
    </style>

    <!-- Переопределяем цвет мигающего курсора. ThemeOverlay !!! -->
    <style name="Custom.TextInput.Box.And.Label.Theme" parent="ThemeOverlay.MaterialComponents">
        <item name="colorPrimary">@color/red</item>
    </style>

    <!-- Цвет текста в TextEditText -->
    <style name="Custom.TextEditText" parent="Widget.MaterialComponents.TextView">
        <item name="android:textColor">@color/colorDecor1</item>
        <item name="android:textSize">18sp</item>
    </style>


</resources>